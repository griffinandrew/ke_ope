name: jup-nb-test
on:
  push:
    branches: base-ope-image #might need to change to be test-book
jobs:
  jup-nb:
    runs-on: ubuntu-latest #use the latest ubuntu container image 
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4 #use action to install python
        with:
          python-version: "3.9"
      - name: Install dependencies #requirements docs unable to read, hard installing dependencies 
        run: |
          #pip install -r requirements.txt    
          pip install jupyter-book matplotlib numpy pandas ipywidgets notebook nbconvert
          #PY=$( cat .github/workflows/import_test.py ) 
          #$PY | while read line
          #do 
          #      $line >> ./test.py
          #done 
          cp .github/workflows/import_test.ipynb ./test.ipynb
          cp .github/workflows/import_test.py ./test_sc.py    
          cp .github/workflows/stop.sh ./stop.sh
          cp .github/workflows/import.ipynb ./import.ipynb
          cp .github/workflows/ip_jnb.ipynb ./ip_jnb.ipynb
          #Y >> ./test.py
      - name: make build # makes the container image build 
        run: |
          make build

      - name: check health
        run: |
          IMAGE=quay.io/rh_ee_keli/ucsls:stable-base-ope-latest
          echo "running"
          docker run -d --name stable -p 8889:8888 $IMAGE # use a different port number here
          echo "done running"
          sleep 10
          echo "ps -a" 
          docker ps -a  
          echo "quitting"
          docker stop stable
      - name: run jup #runs image and checks if it is up running after 12 seconds 
        run: |
          IMAGE=quay.io/rh_ee_keli/ucsls:stable-base-ope-latest
          echo "running"
          docker run -d --name stable -p 8889:8888 $IMAGE #--ip 0.0.0.0 --no-browser
          
          #jupyter notebook --ip 0.0.0.0 --no-browser --allow-root
          echo "done running"
          #.github/workflows/test_script.sh #run the container and run the shell script, this might need to be a path within the github workflow file
          echo "sleep"
          sleep 10
          #LINK=file:///home/jovyan/.local/share/jupyter/runtime/jpserver-7-open.html
          
          #echo "with loop" 
          
          #cat ./test.py

          #echo "cp"

          #cat ./test_sc.py
          #cat ./stop.ipynb
          #cat ./test.ipynb
          #cat ./stop.ipynb

          echo "ps -a" 
          docker ps -a  
          echo "chmod"
          chmod +x ./test_sc.py
          echo "1 done"
          chmod +x ./test.ipynb
          echo "2 done"
          chmod +x ./stop.sh
          echo "3 done"
          chmod +x ./import.ipynb
          echo "4 done"
          chmod +x ./ip_jnb.ipynb
          echo "5 done"
          TEST=$( ./test_sc.py)
          #echo "test 1 set" 

          #TEST2=$( ./test.ipynb)
          TEST3=$( ./stop.sh)
          #TEST4=$( ./import.ipynb)
          echo "test 5 "
          TEST5=$( ./ip_jnb.ipynb)
          echo "test 5 done"

          echo "ps -a"
          docker ps -a
          echo "should be listed"
          ##docker exec stable pwd
          #docker exec stable ls
          #docker exec stable python $TEST
          
          echo "starting nb"
          # docker exec -d stable jupyter notebook --no-browser --ip 0.0.0.0 --NotebookApp.token=""
          docker exec -d stable jupyter notebook --allow-root --no-browser --ip 0.0.0.0 --NotebookApp.token='' --port 8888
          
          sleep 10
          echo "done sleep, listing"
          docker ps -a

          echo "exec and run"
          docker exec stable jupyter nbconvert --execute --to notebook --output /dev/null $TEST5 --execute "--ExecutePreprocessor.timeout=-1"

          #docker exec stable jupyter nbconvert --execute --to notebook --output /dev/null $TEST5 --execute "--no-browser --NotebookApp.token=''"
          #docker exec stable jupyter nbconvert --execute --to notebook --output /dev/null $TEST5
          #docker exec stable jupyter run $TEST $TEST3
          #HOST_PORT=$(docker port stable 8888/tcp | cut -d':' -f2)
           
          echo "quitting"
          #HOST_PORT=$(docker port stable 8888/tcp | cut -d':' -f2)
          # docker exec stable stop
          #docker exec stable jupyter notebook stop
          
          #had python before path
          # echo "image py" 
          #docker exec -it $IMAGE .github/workflows/import_test.py
          #echo "image sh"
          #docker exec -it $IMAGE .github/workflows/test_script.sh
          #echo "from scripts folder in container"

          #docker exec stable python import_test.py 
          
          #echo "container py"
          #docker exec stable python $TEST
          #echo "container sh"
          #docker exec stable .github/workflows/test_script.sh

          docker stop stable
